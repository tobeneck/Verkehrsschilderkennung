#include "Rectangle.hpp"
#include "opencv2/imgproc/imgproc.hpp"
#include "opencv2/highgui/highgui.hpp"
#include "Triangle.hpp"
#include <stdlib.h>
#include <stdio.h>
#include <list>
using namespace cv;

class RectangleDetection {
protected:
	Mat botLeft = (Mat_<int>(9, 9)
		<< -6, -11, -11, -6, 0, 4, 7, 7, 4,
		-11, -18, -18, -11, 0, 8, 13, 13, 8,
		-11, -18, -18, -11, 0, 10, 17, 17, 10,
		-6, -11, -11, -6, 0, 12, 19, 19, 12,
		0, 0, 0, 0, 0, 12, 20, 20, 12,
		-6, -11, -11, -6, 0, -6, -11, -11, -6,
		-11, -18, -18, -11, 0, -11, -18, -18, -11,
		-11, -18, -18, -11, 0, -11, -18, -18, -11,
		-6, -11, -11, -6, 0, -6, -11, -11, -6);

	Mat botRight = (Mat_<int>(9, 9)
		<< 4, 7, 7, 4, 0, -6, -11, -11, -6,
		8, 13, 13, 8, 0, -11, -18, -18, -11,
		10, 17, 17, 10, 0, -11, -18, -18, -11,
		12, 19, 19, 12, 0, -6, -11, -11, -6,
		12, 20, 20, 12, 0, 0, 0, 0, 0,
		-6, -11, -11, -6, 0, -6, -11, -11, -6,
		-11, -18, -18, -11, 0, -11, -18, -18, -11,
		-11, -18, -18, -11, 0, -11, -18, -18, -11,
		-6, -11, -11, -6, 0, -6, -11, -11, -6);

	Mat topLeft = (Mat_<int>(9, 9)
		<< -6, -11, -11, -6, 0, -6, -11, -11, -6,
		-11, -18, -18, -11, 0, -11, -18, -18, -11,
		-11, -18, -18, -11, 0, -11, -18, -18, -11,
		-6, -11, -11, -6, 0, -6, -11, -11, -6,
		0, 0, 0, 0, 0, 12, 20, 20, 12,
		-6, -11, -11, -6, 0, 12, 19, 19, 12,
		-11, -18, -18, -11, 0, 10, 17, 17, 10,
		-11, -18, -18, -11, 0, 8, 13, 13, 8,
		-6, -11, -11, -6, 0, 4, 7, 7, 4);

	Mat topRight = (Mat_<int>(9, 9)
		<< -6, -11, -11, -6, 0, -6, -11, -11, -6,
		-11, -18, -18, -11, 0, -11, -18, -18, -11,
		-11, -18, -18, -11, 0, -11, -18, -18, -11,
		-6, -11, -11, -6, 0, -6, -11, -11, -6,
		12, 20, 20, 12, 0, 0, 0, 0, 0,
		12, 19, 19, 12, 0, -6, -11, -11, -6,
		10, 17, 17, 10, 0, -11, -18, -18, -11,
		8, 13, 13, 8, 0, -11, -18, -18, -11,
		4, 7, 7, 4, 0, -6, -11, -11, -6);


	Point anchor = Point(-1, -1);
	int ddepth = -1;
	double delta = 0;


	std::list<Rectangle> possiblePoints(Mat, Mat, Mat, Mat);

public:
	std::list<Rectangle> detectRectangle(Mat);
};